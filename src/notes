const { state, dispatch } = useProductContext();
let { products, isloading, error, cartState } = state;
const [search, setSearch] = useState("");
const [filteredData, setFilteredData] = useState(products);
const [selectedCategory, setSelectedCategory] = useState("");

const fetchData = async () => {
  dispatch({ type: "START_FETCH" });
  try {
    const res = await fetch("https://fakestoreapi.com/products");
    const data = await res.json();
    dispatch({ type: "FETCH_SUCCESSFUL", payload: data });
  } catch (err) {
    dispatch({
      type: "FETCH_ERROR",
    });
  }
};

useEffect(() => {
  fetchData();
}, []);

const handleCategoryFilter = (category) => {
  setSelectedCategory(category);
  filterData(search, category);
};

const filterData = (searchTerm, category) => {
  let filteredItems = products;

  if (searchTerm) {
    filteredItems = filteredItems.filter((item) =>
      item.name.toLowerCase().includes(searchTerm.toLowerCase())
    );
  }

  if (category) {
    filteredItems = filteredItems.filter((item) =>
      item.category.toLowerCase().includes(category.toLowerCase())
    );
  }
  setFilteredData(filteredItems);
};

<Header search={search} onSearch={onSearch} onFilter={onFilter} />;
